name: Build || Push || Deploy Flask App

on:
  push:
    branches: [ "deploy" ]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: us-central1
  SERVICE_NAME: my-flask-app

jobs:
  build:
    name: Build && Push && Deploy
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout Repo
        uses: actions/checkout@v3

      # Authenticate with Google Cloud
      - name: Set up Google Cloud Authentication
        id: auth
        uses: google-github-actions/auth@v0.4.0
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      # Configure Docker for Google Cloud
      - name: Configure Docker Authentication
        run: gcloud auth configure-docker

      - name: Decode service account key
        run: |
          echo "${{ secrets.SERVICE_ACCOUNT_JSON }}" | base64 --decode > service_account.json

      - name: Build and push Docker image
        run: docker build --build-arg GOOGLE_APPLICATION_CREDENTIALS=service_account.json -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ env.SERVICE_NAME }}:$GITHUB_SHA .
        env:
          GOOGLE_APPLICATION_CREDENTIALS: service_account.json

      # Build the Docker image
      - name: Build Docker Image
        run: docker build --platform linux/amd64 -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ env.SERVICE_NAME }}:$GITHUB_SHA .

      # Push the Docker image to Google Container Registry
      - name: Push Docker Image
        run: docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ env.SERVICE_NAME }}:$GITHUB_SHA

  deploy:
    name: Deploy to Cloud Run
    needs: build
    runs-on: ubuntu-latest

    steps:
      # Authenticate with Google Cloud
      - name: Set up Google Cloud Authentication
        id: auth
        uses: google-github-actions/auth@v0.4.0
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      # Deploy to Cloud Run
      - name: Deploy to Cloud Run
        run: |-
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ env.SERVICE_NAME }}:$GITHUB_SHA \
            --region ${{ env.REGION }} \
            --platform managed \
            --set-env-vars GCP_SA_KEY=${{ secrets.GCP_SA_KEY }} \
            --timeout 3600